#install.packages("remotes", repos = "https://cloud.r-project.org/")
# These are the packages you will need for this activity
packages_needed <- c("tidyverse","learnr", "MASS")
package.check <- lapply(
packages_needed,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE, repos = "http://cran.us.r-project.org")
}
}
)
yes
#install.packages("remotes", repos = "https://cloud.r-project.org/")
# These are the packages you will need for this activity
packages_needed <- c("tidyverse","learnr", "MASS")
package.check <- lapply(
packages_needed,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE, repos = "http://cran.us.r-project.org")
}
}
)
# Credit: package.check based on a helpful post from Vikram Baliga https://vbaliga.github.io/verify-that-r-packages-are-installed-and-loaded/
remotes::install_github("rstudio/gradethis")
#install.packages("remotes", repos = "https://cloud.r-project.org/")
# These are the packages you will need for this activity
packages_needed <- c("tidyverse","learnr", "MASS")
package.check <- lapply(
packages_needed,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE, repos = "http://cran.us.r-project.org")
}
}
)
# Credit: package.check based on a helpful post from Vikram Baliga https://vbaliga.github.io/verify-that-r-packages-are-installed-and-loaded/
#remotes::install_github("rstudio/gradethis")
library(tidyverse)
library(shiny)
library(ggplot2)
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("broom")
library(broom)
library(learnr)
library(remotes)
library(gradethis)
gradethis::gradethis_setup()
knitr::opts_chunk$set(echo = FALSE)
options(tutorial.storage = list(
save_object = function(...){},
get_object = function(...) NULL,
get_objects = function(...) list(),
remove_all_objects = function(...){}))
#update.packages()
set.seed(302)
# Set up parameters of the population errors
error_mean = 0
error_sd = 1
sample_size = 50
# Generate a sample from the true distribution of errors
e <- rnorm(___, ___, ___)
